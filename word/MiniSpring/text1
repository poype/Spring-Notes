IoC容器，也就是BeanFactory，存在的意义就是将创建对象与使用对象的业务代码解耦，让业务开发人员无需关注底层对象（Bean）的构建和生命周期管理，专注
于业务开发。

Spring的作用是什么？
Spring最主要的功能是 IOC(Inversion Of Control) 和 DI(Dependency Injection)，即 控制反转 和 依赖注入。
所谓控制，是指对Java对象生命周期的控制权。
所谓反转，是指将java对象生命周期的控制权从程序员手中反转到IOC容器手中。
而依赖注入，就是指当一个对象依赖于某一个类型的对象时，被依赖的对象实例能够自动注入到依赖对象中的一个属性上。
IOC和DI这两个特性结合起来所带来的好处就是使对象和对象之间能够解耦。对象之间通过interface建立联系，而真正的对象实例则由IOC容器管理，无需手动new操作。
业务程序中不需要再手动 new 一个业务类，只要把它交由框架容器去管理就可以获取我们所需的对象。


@Autowired 和 @Resource
1. 来源不同：@Autowired是Spring定义的注解，而@Resource是Java定义的注解，它来自于JSR-250
2. 依赖查找顺序不同：
     a. @Autowired会先根据类型（byType）查找bean，如果存在多个相同类型的Bean再根据名称（byName）进行查找。
     b. @Resource是先根据Bean的名称查找，如果根据名称查找不到，再根据Bean的类型进行查找。


Primary属性 和 @Primary注解
有两个相同类型的Bean，如果不做任何处理，这会给byType注入带来歧义。primary="true"表示首选这个bean作为候选人。这就解决了歧义，程序就正常运行。
<bean class="com.poype.study_spring_doc.annotation.Cat" primary="true"></bean>